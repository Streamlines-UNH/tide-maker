AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  tide-maker

  SAM Template for tide-maker

Globals:
  Function:
    Timeout: 600
    MemorySize: 256

Resources:

  H5Layer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: h5-lib-layer
      ContentUri: 'dependencies/h5_layer'
      RetentionPolicy: Retain
      CompatibleRuntimes:
        - python3.7
  StreamlineCpp:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: streamlines-exec-layer
      ContentUri: 'dependencies/s111_layer'
      RetentionPolicy: Retain
      CompatibleRuntimes:
        - python3.7

  h5query:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: h5_query.lambda_handler
      Runtime: python3.7
      Role: 'arn:aws:iam::659933455233:role/testing_role'
      CodeUri: functions/h5_query/
      Description: ''
      Environment:
        Variables:
          TIME_TABLE: !Select [1, !Split ["/", !GetAtt Table1.Arn]]
          DATA_BUCKET: !Select [1, !Split [":::", !GetAtt Bucket1.Arn]]
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: cron(0 * ? * * *)

  h5extract:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: h5_extract.lambda_handler
      Runtime: python3.7
      Role: 'arn:aws:iam::659933455233:role/testing_role'
      CodeUri: functions/h5_extract/
      Description: ''
      Layers: 
        - !Ref H5Layer
      Environment:
        Variables:
          UPDATE_TABLE: !Select [1, !Split ["/", !GetAtt Table2.Arn]]
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: Bucket1
            Events:
              - 's3:ObjectCreated:*'

  streamlinesprocessor:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: s111_manager.lambda_handler
      Runtime: python3.7
      Role: 'arn:aws:iam::659933455233:role/testing_role'
      CodeUri: functions/s111_to_streamlines/
      Description: ''
      Environment:
        Variables:
          DATA_DEST: !Select [1, !Split [":::", !GetAtt Bucket2.Arn]]
      Layers: 
        - !Ref H5Layer
        - !Ref StreamlineCpp
      Events:
        DynamoDB1:
          Type: DynamoDB
          Properties:
            Stream:
              !GetAtt Table2.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1

  mapgetretriever:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: map_get_retriever.lambda_handler
      Runtime: python3.8
      CodeUri: functions/map_get_retriever/
      Role: 'arn:aws:iam::659933455233:role/testing_role'
      Environment:
        Variables:
          DATA_SRC: !Select [1, !Split [":::", !GetAtt Bucket2.Arn]]
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /map
            Method: GET

  # h5query -> h5extract
  Bucket1:
    Type: 'AWS::S3::Bucket'
  # streamlinesprocessor -> mapgetretriever
  Bucket2:
    Type: 'AWS::S3::Bucket'
  # h5query timestamps
  Table1:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: dataset
          AttributeType: S
      KeySchema:
        - AttributeName: dataset
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  # streamlinesprocessor trigger
  Table2:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: key_name
          AttributeType: S
      KeySchema:
        - AttributeName: key_name
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
